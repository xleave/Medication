Index: Medication App GUI/src/main/java/gui/AdminManageGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package gui;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.table.AbstractTableModel;\r\nimport javax.swing.table.TableCellRenderer;\r\nimport javax.swing.table.TableCellEditor;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.util.ArrayList;\r\nimport services.User;\r\nimport services.AdminManage;\r\n\r\npublic class AdminManageGUI extends JPanel {\r\n\r\n    private User currentUser;\r\n    private AdminManage adminManage;\r\n\r\n    public AdminManageGUI(User user) {\r\n        this.currentUser = user;\r\n        this.adminManage = new AdminManage(currentUser);\r\n        initialize();\r\n    }\r\n\r\n    private void initialize() {\r\n        this.setLayout(new BorderLayout());\r\n\r\n        JLabel titleLabel = new JLabel(\"User Management\");\r\n        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);\r\n        titleLabel.setFont(new Font(\"Arial\", Font.BOLD, 24));\r\n        this.add(titleLabel, BorderLayout.NORTH);\r\n\r\n        // Get a list of all users\r\n        ArrayList<String[]> userList = adminManage.getAllUsers();\r\n\r\n        // Create user forms\r\n        String[] columnNames = { \"Username\", \"Privilege\", \"Action\" };\r\n        Object[][] data = new Object[userList.size()][3];\r\n\r\n        for (int i = 0; i < userList.size(); i++) {\r\n            data[i][0] = userList.get(i)[0];\r\n            data[i][1] = userList.get(i)[2];\r\n            data[i][2] = \"Delete\"; // Action button\r\n        }\r\n\r\n        UserTableModel model = new UserTableModel(data, columnNames);\r\n        JTable userTable = new JTable(model);\r\n        userTable.getColumn(\"Action\").setCellRenderer(new ButtonRenderer());\r\n        userTable.getColumn(\"Action\").setCellEditor(new ButtonEditor(adminManage, this));\r\n\r\n        JScrollPane tableScrollPane = new JScrollPane(userTable);\r\n        this.add(tableScrollPane, BorderLayout.CENTER);\r\n    }\r\n\r\n    public void refreshInterface() {\r\n        removeAll();\r\n        initialize();\r\n        revalidate();\r\n        repaint();\r\n    }\r\n\r\n    // Customize the form model\r\n    class UserTableModel extends AbstractTableModel {\r\n\r\n        private String[] columnNames;\r\n        private Object[][] data;\r\n\r\n        public UserTableModel(Object[][] data, String[] columnNames) {\r\n            this.data = data;\r\n            this.columnNames = columnNames;\r\n        }\r\n\r\n        @Override\r\n        public int getRowCount() {\r\n            return data.length;\r\n        }\r\n\r\n        @Override\r\n        public int getColumnCount() {\r\n            return columnNames.length;\r\n        }\r\n\r\n        @Override\r\n        public String getColumnName(int col) {\r\n            return columnNames[col];\r\n        }\r\n\r\n        @Override\r\n        public Object getValueAt(int row, int col) {\r\n            return data[row][col];\r\n        }\r\n\r\n        @Override\r\n        public boolean isCellEditable(int row, int col) {\r\n            return col == 2;\r\n        }\r\n\r\n        @Override\r\n        public void setValueAt(Object value, int row, int col) {\r\n            if (col != 2) {\r\n                data[row][col] = value;\r\n                fireTableCellUpdated(row, col);\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public Class<?> getColumnClass(int col) {\r\n            if (col == 2) {\r\n                return Object.class;\r\n            }\r\n            return getValueAt(0, col).getClass();\r\n        }\r\n    }\r\n\r\n    // Button Renderer\r\n    class ButtonRenderer extends JButton implements TableCellRenderer {\r\n        public ButtonRenderer() {\r\n            setOpaque(true);\r\n        }\r\n\r\n        @Override\r\n        public Component getTableCellRendererComponent(JTable table, Object value,\r\n                boolean isSelected, boolean hasFocus, int row, int column) {\r\n            if (isSelected) {\r\n                setForeground(table.getSelectionForeground());\r\n                setBackground(table.getSelectionBackground());\r\n            } else {\r\n                setForeground(table.getForeground());\r\n                setBackground(UIManager.getColor(\"Button.background\"));\r\n            }\r\n            setText((value == null) ? \"\" : value.toString());\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Button Editor\r\n    class ButtonEditor extends AbstractCellEditor implements TableCellEditor {\r\n        private JButton button;\r\n        private String userName;\r\n        private AdminManage adminManage;\r\n        private AdminManageGUI adminManageGUI;\r\n\r\n        public ButtonEditor(AdminManage adminManage, AdminManageGUI adminManageGUI) {\r\n            this.adminManage = adminManage;\r\n            this.adminManageGUI = adminManageGUI;\r\n            button = new JButton(\"Delete\");\r\n            button.setOpaque(true);\r\n\r\n            button.addActionListener(new ActionListener() {\r\n                @Override\r\n                public void actionPerformed(ActionEvent e) {\r\n                    fireEditingStopped();\r\n                    int confirm = JOptionPane.showConfirmDialog(null,\r\n                            \"Are you sure you want to delete user: \" + userName + \"?\", \"Confirm Deletion\",\r\n                            JOptionPane.YES_NO_OPTION);\r\n                    if (confirm == JOptionPane.YES_OPTION) {\r\n                        adminManage.deleteUser(userName);\r\n                        adminManageGUI.refreshInterface();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public Component getTableCellEditorComponent(JTable table, Object value,\r\n                boolean isSelected, int row, int column) {\r\n            userName = (String) table.getValueAt(row, 0);\r\n            button.setText((value != null) ? value.toString() : \"Delete\");\r\n            return button;\r\n        }\r\n\r\n        @Override\r\n        public Object getCellEditorValue() {\r\n            return \"Delete\"; \r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Medication App GUI/src/main/java/gui/AdminManageGUI.java b/Medication App GUI/src/main/java/gui/AdminManageGUI.java
--- a/Medication App GUI/src/main/java/gui/AdminManageGUI.java	(revision 243cc76d9bbbf194ff4a020beb428155228fd579)
+++ b/Medication App GUI/src/main/java/gui/AdminManageGUI.java	(date 1733396904007)
@@ -1,12 +1,12 @@
 package gui;
 
 import javax.swing.*;
-import javax.swing.table.AbstractTableModel;
-import javax.swing.table.TableCellRenderer;
-import javax.swing.table.TableCellEditor;
+import javax.swing.table.*;
 import java.awt.*;
 import java.awt.event.*;
 import java.util.ArrayList;
+
+import services.MedicationManage;
 import services.User;
 import services.AdminManage;
 
@@ -14,36 +14,75 @@
 
     private User currentUser;
     private AdminManage adminManage;
+    private Font applicationFont;
 
     public AdminManageGUI(User user) {
         this.currentUser = user;
         this.adminManage = new AdminManage(currentUser);
+        initializeFont();
         initialize();
     }
 
+    private void initializeFont() {
+        try {
+            applicationFont = MedicationManage
+                    .loadFont("src/main/resources/fonts/RobotoCondensed-VariableFont_wght.ttf");
+        } catch (RuntimeException e) {
+            System.out.println("Font could not be found!");
+            throw e;
+        }
+    }
+
     private void initialize() {
         this.setLayout(new BorderLayout());
 
         JLabel titleLabel = new JLabel("User Management");
         titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
-        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
+        titleLabel.setFont(applicationFont.deriveFont(Font.BOLD, 24f));
         this.add(titleLabel, BorderLayout.NORTH);
 
         // Get a list of all users
         ArrayList<String[]> userList = adminManage.getAllUsers();
 
         // Create user forms
-        String[] columnNames = { "Username", "Privilege", "Action" };
-        Object[][] data = new Object[userList.size()][3];
+        String[] columnNames = { "Username", "Privilege", "Consistent", "Action" };
+        Object[][] data = new Object[userList.size()][4];
 
         for (int i = 0; i < userList.size(); i++) {
-            data[i][0] = userList.get(i)[0];
-            data[i][1] = userList.get(i)[2];
-            data[i][2] = "Delete"; // Action button
+            String username = userList.get(i)[0];
+            String privilege = userList.get(i)[2];
+            data[i][0] = username;
+            data[i][1] = privilege;
+            data[i][2] = adminManage.checkUserConsistency(username) ? "Yes" : "No";
+            data[i][3] = "Actions"; 
         }
 
         UserTableModel model = new UserTableModel(data, columnNames);
         JTable userTable = new JTable(model);
+        userTable.setRowHeight(40); // Set the table not to automatically adjust column widths
+
+        // Set the table not to automatically adjust column widths
+        userTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
+
+        // Set the content to be centered
+        TableColumnModel columnModel = userTable.getColumnModel();
+        columnModel.getColumn(0).setPreferredWidth(200); // Username
+        columnModel.getColumn(1).setPreferredWidth(150); // Privilege
+        columnModel.getColumn(2).setPreferredWidth(150); // Consistent
+        columnModel.getColumn(3).setPreferredWidth(500); // Action
+
+        // Set the content to be centered
+        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
+        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
+        for (int i = 0; i < columnNames.length - 1; i++) { // Action列不需要居中
+            centerRenderer.setFont(applicationFont.deriveFont(14f));
+            userTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
+        }
+
+        // Set the header font
+        JTableHeader header = userTable.getTableHeader();
+        header.setFont(applicationFont.deriveFont(Font.BOLD, 14f));
+
         userTable.getColumn("Action").setCellRenderer(new ButtonRenderer());
         userTable.getColumn("Action").setCellEditor(new ButtonEditor(adminManage, this));
 
@@ -91,12 +130,12 @@
 
         @Override
         public boolean isCellEditable(int row, int col) {
-            return col == 2;
+            return col == 3;
         }
 
         @Override
         public void setValueAt(Object value, int row, int col) {
-            if (col != 2) {
+            if (col != 3) {
                 data[row][col] = value;
                 fireTableCellUpdated(row, col);
             }
@@ -105,36 +144,48 @@
         @Override
         public Class<?> getColumnClass(int col) {
             if (col == 2) {
-                return Object.class;
+                return String.class;
             }
             return getValueAt(0, col).getClass();
         }
     }
 
     // Button Renderer
-    class ButtonRenderer extends JButton implements TableCellRenderer {
+    class ButtonRenderer extends JPanel implements TableCellRenderer {
+        private JButton deleteButton;
+        private JButton editButton;
+        private JButton changePrivilegeButton;
+
         public ButtonRenderer() {
-            setOpaque(true);
+            setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));
+            deleteButton = createButton("Delete");
+            editButton = createButton("Edit");
+            changePrivilegeButton = createButton("Change Privilege");
+            add(deleteButton);
+            add(editButton);
+            add(changePrivilegeButton);
+        }
+
+        private JButton createButton(String text) {
+            JButton button = new JButton(text);
+            button.setPreferredSize(new Dimension(150, 30)); // Uniform button sizes
+            button.setFont(applicationFont.deriveFont(12f));
+            return button;
         }
 
         @Override
         public Component getTableCellRendererComponent(JTable table, Object value,
                 boolean isSelected, boolean hasFocus, int row, int column) {
-            if (isSelected) {
-                setForeground(table.getSelectionForeground());
-                setBackground(table.getSelectionBackground());
-            } else {
-                setForeground(table.getForeground());
-                setBackground(UIManager.getColor("Button.background"));
-            }
-            setText((value == null) ? "" : value.toString());
             return this;
         }
     }
 
     // Button Editor
     class ButtonEditor extends AbstractCellEditor implements TableCellEditor {
-        private JButton button;
+        private JPanel panel;
+        private JButton deleteButton;
+        private JButton editButton;
+        private JButton changePrivilegeButton;
         private String userName;
         private AdminManage adminManage;
         private AdminManageGUI adminManageGUI;
@@ -142,10 +193,26 @@
         public ButtonEditor(AdminManage adminManage, AdminManageGUI adminManageGUI) {
             this.adminManage = adminManage;
             this.adminManageGUI = adminManageGUI;
-            button = new JButton("Delete");
-            button.setOpaque(true);
+            panel = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 0));
+            deleteButton = createButton("Delete");
+            editButton = createButton("Edit");
+            changePrivilegeButton = createButton("Change Privilege");
+            addButtons();
+        }
+
+        private JButton createButton(String text) {
+            JButton button = new JButton(text);
+            button.setPreferredSize(new Dimension(110, 30)); // Uniform button sizes
+            button.setFont(applicationFont.deriveFont(12f));
+            return button;
+        }
 
-            button.addActionListener(new ActionListener() {
+        private void addButtons() {
+            panel.add(deleteButton);
+            panel.add(editButton);
+            panel.add(changePrivilegeButton);
+
+            deleteButton.addActionListener(new ActionListener() {
                 @Override
                 public void actionPerformed(ActionEvent e) {
                     fireEditingStopped();
@@ -158,19 +225,72 @@
                     }
                 }
             });
+
+            editButton.addActionListener(new ActionListener() {
+                @Override
+                public void actionPerformed(ActionEvent e) {
+                    fireEditingStopped();
+                    String newPassword = JOptionPane.showInputDialog(null,
+                            "Enter new password for user: " + userName, "Edit Password",
+                            JOptionPane.PLAIN_MESSAGE);
+                    if (newPassword != null && !newPassword.trim().isEmpty()) {
+                        adminManage.updateUserPassword(userName, newPassword.trim());
+                        JOptionPane.showMessageDialog(null, "Password updated successfully.");
+                        adminManageGUI.refreshInterface();
+                    } else {
+                        JOptionPane.showMessageDialog(null, "Password cannot be empty.");
+                    }
+                }
+            });
+
+            changePrivilegeButton.addActionListener(new ActionListener() {
+                @Override
+                public void actionPerformed(ActionEvent e) {
+                    fireEditingStopped();
+                    String[] options = { "user", "admin" };
+                    String currentPrivilege = getCurrentPrivilege(userName);
+                    String newPrivilege = (String) JOptionPane.showInputDialog(null,
+                            "Select new privilege for user: " + userName,
+                            "Change Privilege",
+                            JOptionPane.PLAIN_MESSAGE,
+                            null,
+                            options,
+                            currentPrivilege);
+                    if (newPrivilege != null && !newPrivilege.equals(currentPrivilege)) {
+                        adminManage.updateUserPrivilege(userName, newPrivilege);
+                        JOptionPane.showMessageDialog(null, "Privilege updated successfully.");
+                        adminManageGUI.refreshInterface();
+                    }
+                }
+
+                /**
+                 * Get the current user's permissions
+                 * 
+                 * @param userName User name
+                 * @return Current permissions
+                 */
+                private String getCurrentPrivilege(String userName) {
+                    ArrayList<String[]> users = adminManage.getAllUsers();
+                    for (String[] user : users) {
+                        if (user[0].equals(userName)) {
+                            return user[2];
+                        }
+                    }
+                    return "user"; // Default permissions
+                }
+            });
         }
 
         @Override
         public Component getTableCellEditorComponent(JTable table, Object value,
                 boolean isSelected, int row, int column) {
             userName = (String) table.getValueAt(row, 0);
-            button.setText((value != null) ? value.toString() : "Delete");
-            return button;
+            return panel;
         }
 
         @Override
         public Object getCellEditorValue() {
-            return "Delete"; 
+            return null;
         }
     }
 }
\ No newline at end of file
Index: Medication App GUI/.idea/csv-editor.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CsvFileAttributes\">\r\n    <option name=\"attributeMap\">\r\n      <map>\r\n        <entry key=\"/Medication App/src/resources/lists/Xumin_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"$PROJECT_DIR$/../Medication App/Medication App/src/resources/lists/Marley_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/lists/Marley_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/lists/Mo_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/lists/Xumin_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/lists/adam_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/lists/admin_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/lists/james_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/lists/josh_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/lists/peter_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/lists/test1_medicines.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/medication_history/Xumin_history.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/medication_history/james_history.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/medication_history/josh_history.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/medication_history/peter_history.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/medication_history/test1_history.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/medications/Xumin_medications.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/medications/marley_medications.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/medications/test1_medications.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/medications/testuser2_medications.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"/src/resources/users/users.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Medication App GUI/.idea/csv-editor.xml b/Medication App GUI/.idea/csv-editor.xml
--- a/Medication App GUI/.idea/csv-editor.xml	(revision 243cc76d9bbbf194ff4a020beb428155228fd579)
+++ b/Medication App GUI/.idea/csv-editor.xml	(date 1733396904007)
@@ -3,147 +3,7 @@
   <component name="CsvFileAttributes">
     <option name="attributeMap">
       <map>
-        <entry key="/Medication App/src/resources/lists/Xumin_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
         <entry key="$PROJECT_DIR$/../Medication App/Medication App/src/resources/lists/Marley_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/lists/Marley_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/lists/Mo_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/lists/Xumin_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/lists/adam_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/lists/admin_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/lists/james_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/lists/josh_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/lists/peter_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/lists/test1_medicines.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/medication_history/Xumin_history.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/medication_history/james_history.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/medication_history/josh_history.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/medication_history/peter_history.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/medication_history/test1_history.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/medications/Xumin_medications.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/medications/marley_medications.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/medications/test1_medications.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/medications/testuser2_medications.csv">
-          <value>
-            <Attribute>
-              <option name="separator" value="," />
-            </Attribute>
-          </value>
-        </entry>
-        <entry key="/src/resources/users/users.csv">
           <value>
             <Attribute>
               <option name="separator" value="," />
Index: Medication App GUI/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <groupId>com.example</groupId>\r\n    <artifactId>Medication-App</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n    <dependencies>\r\n        <!-- Add your dependencies here -->\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>4.13.2</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>javax.mail</groupId>\r\n            <artifactId>javax.mail-api</artifactId>\r\n            <version>1.6.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>javax.activation</groupId>\r\n            <artifactId>activation</artifactId>\r\n            <version>1.1.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.sun.mail</groupId>\r\n            <artifactId>javax.mail</artifactId>\r\n            <version>1.6.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.sun.activation</groupId>\r\n            <artifactId>javax.activation</artifactId>\r\n            <version>1.2.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mockito</groupId>\r\n            <artifactId>mockito-core</artifactId>\r\n            <version>4.11.0</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n    </dependencies>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Medication App GUI/pom.xml b/Medication App GUI/pom.xml
--- a/Medication App GUI/pom.xml	(revision 243cc76d9bbbf194ff4a020beb428155228fd579)
+++ b/Medication App GUI/pom.xml	(date 1733396904007)
@@ -5,6 +5,10 @@
     <groupId>com.example</groupId>
     <artifactId>Medication-App</artifactId>
     <version>1.0-SNAPSHOT</version>
+    <properties>
+        <maven.compiler.source>17</maven.compiler.source>
+        <maven.compiler.target>17</maven.compiler.target>
+    </properties>
     <dependencies>
         <!-- Add your dependencies here -->
         <dependency>
Index: Medication App GUI/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Medication App GUI/.idea/misc.xml b/Medication App GUI/.idea/misc.xml
--- a/Medication App GUI/.idea/misc.xml	(revision 243cc76d9bbbf194ff4a020beb428155228fd579)
+++ b/Medication App GUI/.idea/misc.xml	(date 1733396904007)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: Medication App GUI/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"Medication-App\" />\r\n        <module name=\"Medication App GUI\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Medication App GUI/.idea/compiler.xml b/Medication App GUI/.idea/compiler.xml
--- a/Medication App GUI/.idea/compiler.xml	(revision 243cc76d9bbbf194ff4a020beb428155228fd579)
+++ b/Medication App GUI/.idea/compiler.xml	(date 1733396904007)
@@ -7,7 +7,6 @@
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
         <outputRelativeToContentRoot value="true" />
         <module name="Medication-App" />
-        <module name="Medication App GUI" />
       </profile>
     </annotationProcessing>
   </component>
Index: Medication App GUI/src/main/java/gui/LoginGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package gui;\r\n\r\nimport javax.swing.*;\r\n\r\npublic class LoginGUI extends JFrame {\r\n\r\n    private String nameFieldContents;\r\n    private String passwordFieldContents;\r\n\r\n    public String getNameFieldContents() {\r\n        return nameFieldContents;\r\n    }\r\n\r\n    public String getPasswordFieldContents() {\r\n        return passwordFieldContents;\r\n    }\r\n\r\n    public LoginGUI() {\r\n        displayLoginGUI();\r\n    }\r\n\r\n    public void displayLoginGUI() {\r\n        JPanel jp = new JPanel();\r\n        jp.setLayout(new BoxLayout(jp, BoxLayout.Y_AXIS));\r\n\r\n        JTextField usernameField = new JTextField(15);\r\n        JPasswordField passwordField1 = new JPasswordField(15);\r\n\r\n        jp.add(new JLabel(\"Username Input:\"));\r\n        jp.add(usernameField);\r\n        jp.add(Box.createVerticalStrut(10));\r\n        jp.add(new JLabel(\"Password Input:\"));\r\n        jp.add(passwordField1);\r\n\r\n        String[] options = { \"Sign In\", \"Cancel\" };\r\n\r\n        int result = JOptionPane.showOptionDialog(\r\n                null,\r\n                jp,\r\n                \"Sign In\",\r\n                JOptionPane.DEFAULT_OPTION,\r\n                JOptionPane.PLAIN_MESSAGE,\r\n                null,\r\n                options,\r\n                options[0]);\r\n\r\n        if (result == 0) { // \"Sign In\" button clicked\r\n            nameFieldContents = usernameField.getText();\r\n            passwordFieldContents = new String(passwordField1.getPassword());\r\n        } else if (result == 1) { // \"Cancel\" button clicked\r\n            System.out.println(\"Login Cancelled\");\r\n            System.exit(0);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Medication App GUI/src/main/java/gui/LoginGUI.java b/Medication App GUI/src/main/java/gui/LoginGUI.java
--- a/Medication App GUI/src/main/java/gui/LoginGUI.java	(revision 243cc76d9bbbf194ff4a020beb428155228fd579)
+++ b/Medication App GUI/src/main/java/gui/LoginGUI.java	(date 1733396904007)
@@ -44,10 +44,10 @@
                 options,
                 options[0]);
 
-        if (result == 0) { // "Sign In" button clicked
+        if (result == 0) {
             nameFieldContents = usernameField.getText();
             passwordFieldContents = new String(passwordField1.getPassword());
-        } else if (result == 1) { // "Cancel" button clicked
+        } else {
             System.out.println("Login Cancelled");
             System.exit(0);
         }
Index: Medication App GUI/src/main/resources/users/users.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>admin,admin,admin\r\nXumin,123123,user\r\ntestUser,testPassword,user
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Medication App GUI/src/main/resources/users/users.csv b/Medication App GUI/src/main/resources/users/users.csv
--- a/Medication App GUI/src/main/resources/users/users.csv	(revision 243cc76d9bbbf194ff4a020beb428155228fd579)
+++ b/Medication App GUI/src/main/resources/users/users.csv	(date 1733396904007)
@@ -1,3 +1,3 @@
 admin,admin,admin
 Xumin,123123,user
-testUser,testPassword,user
\ No newline at end of file
+marley,daisy,user
Index: Medication App GUI/src/main/resources/medications/Xumin_medications.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Medication App GUI/src/main/resources/medications/Xumin_medications.csv b/Medication App GUI/src/main/resources/medications/Xumin_medications.csv
new file mode 100644
--- /dev/null	(date 1733396904007)
+++ b/Medication App GUI/src/main/resources/medications/Xumin_medications.csv	(date 1733396904007)
@@ -0,0 +1,1 @@
+123,123,123,123,123123,123
Index: Medication App GUI/src/main/java/gui/MedicationHistoryGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package gui;\r\nimport services.User;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\nimport static java.awt.AWTEventMulticaster.add;\r\nimport static services.MedicationManage.loadFont;\r\n\r\npublic class MedicationHistoryGUI extends JPanel {\r\n\r\n    private User currentUser;\r\n\r\n    public JPanel medicationHistoryPanelContents = new JPanel();\r\n\r\n    private JScrollPane medicationScrollPane;\r\n\r\n    public MedicationHistoryGUI(User user) {\r\n        this.currentUser = user;\r\n        initializeGUI();\r\n    }\r\n\r\n    public void initializeGUI() {\r\n        Font applicationFont = loadFont();\r\n\r\n        JPanel medicationHistoryPanel = new JPanel();\r\n        medicationHistoryPanel.setPreferredSize(new Dimension(980, 600));\r\n\r\n        JPanel medicationHistoryPanelContents = new JPanel();\r\n        medicationHistoryPanelContents.setPreferredSize(new Dimension(980, 600));\r\n\r\n        JLabel medicationHistoryGUISubheading = new JLabel(\"MEDICATION HISTORY\");\r\n        medicationHistoryGUISubheading.setBounds(10, 300, 100,20);\r\n        medicationHistoryPanel.add(medicationHistoryGUISubheading);\r\n\r\n        //createMedicationListTable(medicationHistoryPanelContents);\r\n\r\n        drawGraph g = new drawGraph();\r\n        medicationHistoryPanel.add(g,BorderLayout.CENTER);\r\n\r\n        medicationHistoryPanel.add(medicationHistoryPanelContents);\r\n        add(medicationHistoryPanel);\r\n    }\r\n\r\n\r\n    private Font loadFont() {\r\n        Font applicationFont;\r\n        try {\r\n            applicationFont = Font.createFont(Font.TRUETYPE_FONT,\r\n                    new File(\"src/main/resources/fonts/RobotoCondensed-VariableFont_wght.ttf\")).deriveFont(16f);\r\n            GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\r\n            ge.registerFont(applicationFont);\r\n        } catch (IOException | FontFormatException e) {\r\n            System.out.println(\"Font could not be found!\");\r\n            throw new RuntimeException(e);\r\n        }\r\n        return applicationFont;\r\n    }\r\n\r\n    private void createMedicationListTable(JPanel panel) {\r\n\r\n        String[] medicationListHeaders = {\"Medication\", \"Take\"};\r\n        Object[][] medicationListData = {\r\n                {\"Paracetomol\", \"Button ?\"}\r\n        };\r\n\r\n        JTable medicationListTable = new JTable(medicationListData, medicationListHeaders);\r\n        medicationListTable.setBounds(10, 100, 100, 400);\r\n\r\n        JScrollPane medicationListScrollPane = new JScrollPane(medicationListTable);\r\n        medicationListScrollPane.setBounds(10, 100, 100, 400);\r\n        panel.add(medicationListScrollPane);\r\n    }\r\n\r\n    private class drawGraph extends JPanel{\r\n    int[] testdata ={5,10,15,20,30};\r\n    String[] testname = {\"Para\",\"Ibu\",\"Med3\",\"Med4\",\"Med5\"};\r\n\r\n        @Override\r\n        protected void paintComponent(Graphics g){\r\n            super.paintComponent(g);\r\n\r\n                Graphics2D gtd = (Graphics2D) g;\r\n\r\n                gtd.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);\r\n                gtd.setColor(Color.blue);\r\n\r\n                int xs = 50;\r\n                int ys = 250;\r\n                int width = 40;\r\n                int space = 20;\r\n\r\n                for(int i = 0; i<testdata.length;i++){\r\n                    int barheight = testdata[i] * 5;\r\n                    gtd.fillRect(xs + (i*(width+space)),ys-barheight,width,barheight);\r\n                    gtd.setColor(Color.black);\r\n                    gtd.drawString(testname[i],xs+(i*(width+space))+5,ys+15);\r\n                    gtd.setColor(Color.blue);\r\n                }\r\n            }\r\n            public Dimension getPreferredSize() {\r\n            return new Dimension(500, 300);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Medication App GUI/src/main/java/gui/MedicationHistoryGUI.java b/Medication App GUI/src/main/java/gui/MedicationHistoryGUI.java
--- a/Medication App GUI/src/main/java/gui/MedicationHistoryGUI.java	(revision 243cc76d9bbbf194ff4a020beb428155228fd579)
+++ b/Medication App GUI/src/main/java/gui/MedicationHistoryGUI.java	(date 1733396904007)
@@ -2,7 +2,10 @@
 import services.User;
 
 import javax.swing.*;
+import javax.swing.table.TableCellRenderer;
 import java.awt.*;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
 import java.io.File;
 import java.io.IOException;
 
@@ -35,7 +38,7 @@
         medicationHistoryGUISubheading.setBounds(10, 300, 100,20);
         medicationHistoryPanel.add(medicationHistoryGUISubheading);
 
-        //createMedicationListTable(medicationHistoryPanelContents);
+        createMedicationListTable(medicationHistoryPanelContents);
 
         drawGraph g = new drawGraph();
         medicationHistoryPanel.add(g,BorderLayout.CENTER);
@@ -67,6 +70,8 @@
         };
 
         JTable medicationListTable = new JTable(medicationListData, medicationListHeaders);
+        medicationListTable.getColumnModel().getColumn(1).setCellRenderer(new MedicationHistoryGUI.ButtonRenderer());
+        medicationListTable.getColumnModel().getColumn(1).setCellEditor(new MedicationHistoryGUI.ButtonEditor(new JTextField()));
         medicationListTable.setBounds(10, 100, 100, 400);
 
         JScrollPane medicationListScrollPane = new JScrollPane(medicationListTable);
@@ -74,6 +79,65 @@
         panel.add(medicationListScrollPane);
     }
 
+    //This class and methods are used to add a JButton into a JTable.
+    public class ButtonRenderer extends JButton implements TableCellRenderer {
+        public ButtonRenderer() {
+            setOpaque(true);
+        }
+
+        @Override
+        public Component getTableCellRendererComponent(JTable table, Object obj, boolean selected, boolean focused, int row, int column) {
+            setText((obj == null) ? "":obj.toString());
+            return this;
+        }
+    }
+    class ButtonEditor extends DefaultCellEditor {
+        protected JButton takeMedicineButton;
+        private String buttonLabel;
+        private Boolean buttonHasBeenClicked;
+
+        public ButtonEditor(JTextField textField) {
+            super(textField);
+
+            takeMedicineButton = new JButton();
+            takeMedicineButton.setOpaque(true);
+
+            //Action listener to see if user has clicked corresponding medicine take button.
+            takeMedicineButton.addActionListener(new ActionListener() {
+                @Override
+                public void actionPerformed(ActionEvent takeMedicineButtonClicked) {
+                    fireEditingStopped();
+                }
+            });
+        }
+        //Overriding method
+        public Component getTableCellEditorComponent(JTable table, Object obj, boolean selected, int row, int column) {
+
+            buttonLabel = (obj == null) ? "":obj.toString();
+            takeMedicineButton.setText(buttonLabel);
+            buttonHasBeenClicked = true;
+
+            return takeMedicineButton;
+        }
+
+        @Override
+        public Object getCellEditorValue() {
+            if (buttonHasBeenClicked) {
+                JOptionPane.showMessageDialog(takeMedicineButton, "Do you want to log medication as taken?");
+            }
+            buttonHasBeenClicked = false;
+            return new String(buttonLabel);
+        }
+
+        public boolean stopCellEditing() {
+            buttonHasBeenClicked=false;
+            return super.stopCellEditing();
+        }
+        protected void fireEditingStopped() {
+            super.fireEditingStopped();
+        }
+    }
+
     private class drawGraph extends JPanel{
     int[] testdata ={5,10,15,20,30};
     String[] testname = {"Para","Ibu","Med3","Med4","Med5"};
Index: Medication App GUI/src/main/java/services/AdminManage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package services;\r\n\r\nimport java.awt.*;\r\nimport java.io.*;\r\nimport java.util.ArrayList;\r\nimport javax.swing.*;\r\n\r\npublic class AdminManage {\r\n\r\n    private User currentUser;\r\n\r\n    public AdminManage(User currentUser) {\r\n        this.currentUser = currentUser;\r\n    }\r\n\r\n    public ArrayList<String[]> getAllUsers() {\r\n        ArrayList<String[]> userList = new ArrayList<>();\r\n        try {\r\n            File userFile = new File(\"src/main/resources/users/users.csv\");\r\n            BufferedReader br = new BufferedReader(new FileReader(userFile));\r\n            String line;\r\n            while ((line = br.readLine()) != null) {\r\n                String[] userDetails = line.split(\",\");\r\n                if (userDetails.length >= 3) {\r\n                    // Do not show the current administrator himself\r\n                    if (!userDetails[0].equals(currentUser.getName())) {\r\n                        userList.add(userDetails);\r\n                    }\r\n                }\r\n            }\r\n            br.close();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return userList;\r\n    }\r\n\r\n    public void deleteUser(String userName) {\r\n        try {\r\n            // Remove users from users.csv\r\n            File userFile = new File(\"src/main/resources/users/users.csv\");\r\n            File tempFile = new File(\"src/main/resources/users/users_temp.csv\");\r\n\r\n            BufferedReader reader = new BufferedReader(new FileReader(userFile));\r\n            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));\r\n\r\n            String currentLine;\r\n            while ((currentLine = reader.readLine()) != null) {\r\n                String trimmedLine = currentLine.trim();\r\n                if (trimmedLine.startsWith(userName + \",\")) {\r\n                    continue;\r\n                }\r\n                writer.write(currentLine + System.getProperty(\"line.separator\"));\r\n            }\r\n            writer.close();\r\n            reader.close();\r\n\r\n            // Delete the original file and rename the temporary file\r\n            if (!userFile.delete()) {\r\n                System.out.println(\"Failed to delete the original user file.\");\r\n            }\r\n            if (!tempFile.renameTo(userFile)) {\r\n                System.out.println(\"Failed to rename the temp user file.\");\r\n            }\r\n\r\n            // Delete the user's medication file\r\n            File medicationFile = new File(\"src/main/resources/medications/\" + userName + \"_medications.csv\");\r\n            if (medicationFile.exists()) {\r\n                medicationFile.delete();\r\n            }\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Medication App GUI/src/main/java/services/AdminManage.java b/Medication App GUI/src/main/java/services/AdminManage.java
--- a/Medication App GUI/src/main/java/services/AdminManage.java	(revision 243cc76d9bbbf194ff4a020beb428155228fd579)
+++ b/Medication App GUI/src/main/java/services/AdminManage.java	(date 1733396904007)
@@ -1,9 +1,7 @@
 package services;
 
-import java.awt.*;
 import java.io.*;
 import java.util.ArrayList;
-import javax.swing.*;
 
 public class AdminManage {
 
@@ -73,4 +71,83 @@
             e.printStackTrace();
         }
     }
-}
+
+    public boolean checkUserConsistency(String userName) {
+        File medicationFile = new File("src/main/resources/medications/" + userName + "_medications.csv");
+        return medicationFile.exists();
+    }
+
+    public void updateUserPassword(String userName, String newPassword) {
+        try {
+            File userFile = new File("src/main/resources/users/users.csv");
+            File tempFile = new File("src/main/resources/users/users_temp.csv");
+
+            BufferedReader reader = new BufferedReader(new FileReader(userFile));
+            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));
+
+            String currentLine;
+            while ((currentLine = reader.readLine()) != null) {
+                String[] userDetails = currentLine.split(",");
+                if (userDetails.length >= 3 && userDetails[0].equals(userName)) {
+                    writer.write(
+                            userName + "," + newPassword + "," + userDetails[2] + System.getProperty("line.separator"));
+                } else {
+                    writer.write(currentLine + System.getProperty("line.separator"));
+                }
+            }
+            writer.close();
+            reader.close();
+
+            // Replace original file with updated file
+            if (!userFile.delete()) {
+                System.out.println("Failed to delete the original user file.");
+            }
+            if (!tempFile.renameTo(userFile)) {
+                System.out.println("Failed to rename the temp user file.");
+            }
+
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * 更新用户的权限
+     * 
+     * @param userName     用户名
+     * @param newPrivilege 新的权限（"user" 或 "admin"）
+     */
+    public void updateUserPrivilege(String userName, String newPrivilege) {
+        try {
+            File userFile = new File("src/main/resources/users/users.csv");
+            File tempFile = new File("src/main/resources/users/users_temp.csv");
+
+            BufferedReader reader = new BufferedReader(new FileReader(userFile));
+            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));
+
+            String currentLine;
+            while ((currentLine = reader.readLine()) != null) {
+                String[] userDetails = currentLine.split(",");
+                if (userDetails.length >= 3 && userDetails[0].equals(userName)) {
+                    writer.write(userName + "," + userDetails[1] + "," + newPrivilege
+                            + System.getProperty("line.separator"));
+                } else {
+                    writer.write(currentLine + System.getProperty("line.separator"));
+                }
+            }
+            writer.close();
+            reader.close();
+
+            // Replace original file with updated file
+            if (!userFile.delete()) {
+                System.out.println("Failed to delete the original user file.");
+            }
+            if (!tempFile.renameTo(userFile)) {
+                System.out.println("Failed to rename the temp user file.");
+            }
+
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+}
\ No newline at end of file
